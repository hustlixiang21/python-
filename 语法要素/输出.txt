输出

print的函数的基本使用，在之前的关卡中，已经出现过多次，将要输出的内容放在print()的括号内，就可以输出：

print("hello world")
得到的结果是：hello world

print函数可以同时输出多个内容，只需要将它一起放在print的括号内，并用逗号隔开：

print("hello","world")
得到的结果：hello world

值得注意的是，同时输出的多个内容之间，会有空格隔开。

类似于 C/C++ 的printf，Python 的print也能实现格式化输出，方法是使用%操作符，它会将左边的字符串当做格式字符串，将右边的参数代入格式字符串：

print("100 + 200 = %d" % 300) #左边的%d被替换成右边的300
print("A的小写是%s" % "a") #左边的%s被替换成右边的a
得到的结果是：

100 + 200 = 300
A的小写是a

如果要带入多个参数，则需要用()包裹代入的多个参数，参数与参数之间用逗号隔开，参数的顺序应该对应格式字符串中的顺序：

print("%d + %d = %d" % (100,200,300))
print("%s %s" % ("world","hello"))
得到的结果是：

100 + 200 = 300
world hello

格式字符串中，不同占位符的含义：

%s：      作为字符串
%d：     作为有符号十进制整数
%u：     作为无符号十进制整数
%o：     作为无符号八进制整数
%x：     作为无符号十六进制整数，a～f采用小写形式
%X：     作为无符号十六进制整数，A～F采用大写形式
%f：     作为浮点数
%e，%E： 作为浮点数，使用科学计数法
%g，%G： 作为浮点数，使用最低有效数位

更多用法可以在网络上自行搜索。

注意: print函数输出数据后会换行，如果不想换行，需要指定end=""：

print("hello" , end="")
print("world" , end="")
得到的结果：helloworld
